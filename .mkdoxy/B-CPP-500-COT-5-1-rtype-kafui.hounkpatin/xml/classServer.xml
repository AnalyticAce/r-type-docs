<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classServer" kind="class" language="C++" prot="public">
    <compoundname>Server</compoundname>
    <includes refid="Server_8hpp" local="no">Server.hpp</includes>
    <innerclass refid="structServer_1_1ClientInfo" prot="private">Server::ClientInfo</innerclass>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classServer_1a5cd60e8f153c791812d9b497a86116fa" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; udp::endpoint, std::string &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;udp::endpoint, std::string&gt; &gt; Server::id_name</definition>
        <argsstring></argsstring>
        <name>id_name</name>
        <qualifiedname>Server::id_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="95" column="15" bodyfile="src/Server/include/Server.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1afffd36a76004131cc81372f8cb7a36e0" prot="public" static="no" mutable="no">
        <type>boost::asio::steady_timer</type>
        <definition>boost::asio::steady_timer Server::_game_time_manager</definition>
        <argsstring></argsstring>
        <name>_game_time_manager</name>
        <qualifiedname>Server::_game_time_manager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="97" column="29" bodyfile="src/Server/include/Server.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a37bf1bdfe9f658722d2e6986aee87455" prot="public" static="no" mutable="no">
        <type><ref refid="classRegistry" kindref="compound">Registry</ref></type>
        <definition>Registry Server::registry</definition>
        <argsstring></argsstring>
        <name>registry</name>
        <qualifiedname>Server::registry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="98" column="12" bodyfile="src/Server/include/Server.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a7cf9c7008b64401b78ea15e72afabfc3" prot="public" static="no" mutable="no">
        <type><ref refid="classMouvementSystem" kindref="compound">MouvementSystem</ref></type>
        <definition>MouvementSystem Server::movement</definition>
        <argsstring></argsstring>
        <name>movement</name>
        <qualifiedname>Server::movement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="99" column="19" bodyfile="src/Server/include/Server.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a7b2e00c389aa96a2022ec6ed8a06448c" prot="public" static="no" mutable="no">
        <type><ref refid="classTimeManager" kindref="compound">TimeManager</ref></type>
        <definition>TimeManager Server::enemyTimer</definition>
        <argsstring></argsstring>
        <name>enemyTimer</name>
        <qualifiedname>Server::enemyTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="100" column="15" bodyfile="src/Server/include/Server.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1ae6d40b8cbc195aeb3b3c4736f9c9f115" prot="public" static="no" mutable="no">
        <type><ref refid="classCollisionSystem" kindref="compound">CollisionSystem</ref></type>
        <definition>CollisionSystem Server::collision</definition>
        <argsstring></argsstring>
        <name>collision</name>
        <qualifiedname>Server::collision</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="101" column="19" bodyfile="src/Server/include/Server.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a493e2f6cdc1ac7b34c7ba08e996af10d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Server::game_run</definition>
        <argsstring></argsstring>
        <name>game_run</name>
        <qualifiedname>Server::game_run</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="102" column="8" bodyfile="src/Server/include/Server.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a8215c317c9ccea1af12bffe1d3a4e7c5" prot="public" static="no" mutable="no">
        <type>u_int16_t</type>
        <definition>u_int16_t Server::players_count</definition>
        <argsstring></argsstring>
        <name>players_count</name>
        <qualifiedname>Server::players_count</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="103" column="13" bodyfile="src/Server/include/Server.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a379f70d7a47b7a1777ac3085962acb2f" prot="public" static="no" mutable="no">
        <type>u_int16_t</type>
        <definition>u_int16_t Server::enemy_count</definition>
        <argsstring></argsstring>
        <name>enemy_count</name>
        <qualifiedname>Server::enemy_count</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="104" column="13" bodyfile="src/Server/include/Server.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a11ff54c2dafcf3447428be775b215b3c" prot="public" static="no" mutable="no">
        <type>std::vector&lt; udp::endpoint &gt;</type>
        <definition>std::vector&lt;udp::endpoint&gt; Server::_connected_clients</definition>
        <argsstring></argsstring>
        <name>_connected_clients</name>
        <qualifiedname>Server::_connected_clients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="105" column="15" bodyfile="src/Server/include/Server.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classServer_1a1fd6450c69b29a8d03a47cae5a5d2ac3" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; udp::endpoint, ClientInfo, <ref refid="structEndpointHash" kindref="compound">EndpointHash</ref>, <ref refid="structEndpointEqual" kindref="compound">EndpointEqual</ref> &gt;</type>
        <definition>std::unordered_map&lt;udp::endpoint, ClientInfo, EndpointHash, EndpointEqual&gt; Server::clients_me</definition>
        <argsstring></argsstring>
        <name>clients_me</name>
        <qualifiedname>Server::clients_me</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="116" column="7" bodyfile="src/Server/include/Server.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1af0b06c057375e964baaf2a00fb59ff16" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; udp::endpoint, std::string, <ref refid="structEndpointHash" kindref="compound">EndpointHash</ref>, <ref refid="structEndpointEqual" kindref="compound">EndpointEqual</ref> &gt;</type>
        <definition>std::unordered_map&lt;udp::endpoint, std::string, EndpointHash, EndpointEqual&gt; Server::clients</definition>
        <argsstring></argsstring>
        <name>clients</name>
        <qualifiedname>Server::clients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="118" column="7" bodyfile="src/Server/include/Server.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classServer_1a9d30de1bda496b9c10aed129ac7a9640" prot="private" static="no" mutable="no">
        <type><ref refid="classRoom__System" kindref="compound">Room_System</ref></type>
        <definition>Room_System Server::room_system</definition>
        <argsstring></argsstring>
        <name>room_system</name>
        <qualifiedname>Server::room_system</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="119" column="15" bodyfile="src/Server/include/Server.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classServer_1ad4b85696fb2da1ebc1a52874336de7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Server::Server</definition>
        <argsstring>(boost::asio::io_context &amp;io_context, server_t server_me)</argsstring>
        <name>Server</name>
        <qualifiedname>Server::Server</qualifiedname>
        <param>
          <type>boost::asio::io_context &amp;</type>
          <declname>io_context</declname>
        </param>
        <param>
          <type><ref refid="Server_8hpp_1abc42251e23920034c0d3782eac8d3efe" kindref="member">server_t</ref></type>
          <declname>server_me</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="65" column="3" bodyfile="src/Server/src/Server.cpp" bodystart="9" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a4b3aa2579cb1c8cd1d069582c14d0fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Server::~Server</definition>
        <argsstring>()</argsstring>
        <name>~Server</name>
        <qualifiedname>Server::~Server</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="66" column="3" bodyfile="src/Server/src/Server.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1adb641bb1d2dd1c0ba6f93645b4107cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::process_message</definition>
        <argsstring>(udp::socket &amp;socket, const std::vector&lt; uint8_t &gt; &amp;buffer, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>process_message</name>
        <qualifiedname>Server::process_message</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="67" column="8" bodyfile="src/Server/src/Server.cpp" bodystart="38" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a71163324a3460436e0df6905a141d682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::process_message_contain</definition>
        <argsstring>(udp::socket &amp;socket, const std::vector&lt; uint8_t &gt; &amp;buffer, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>process_message_contain</name>
        <qualifiedname>Server::process_message_contain</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="69" column="8" bodyfile="src/Server/src/server_room.cpp" bodystart="10" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a38608834a44a8280bf55ba56b791ba25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::notify_clients_of_disconnection</definition>
        <argsstring>(boost::asio::io_context &amp;io_context, const udp::endpoint &amp;disconnected_client)</argsstring>
        <name>notify_clients_of_disconnection</name>
        <qualifiedname>Server::notify_clients_of_disconnection</qualifiedname>
        <param>
          <type>boost::asio::io_context &amp;</type>
          <declname>io_context</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>disconnected_client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="73" column="3" bodyfile="src/Server/src/robustness.cpp" bodystart="73" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a6b97b25172b3c31b6cd0f83963ecbbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::check_player_message</definition>
        <argsstring>(udp::socket &amp;socket, const std::vector&lt; uint8_t &gt; &amp;buffer, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>check_player_message</name>
        <qualifiedname>Server::check_player_message</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="75" column="8" bodyfile="src/Server/src/check_message.cpp" bodystart="21" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1ae8cbcb754a370d6f8fd64bb44f4af8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::start_udp_server</definition>
        <argsstring>(boost::asio::io_context &amp;io_context, int port)</argsstring>
        <name>start_udp_server</name>
        <qualifiedname>Server::start_udp_server</qualifiedname>
        <param>
          <type>boost::asio::io_context &amp;</type>
          <declname>io_context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="78" column="8" bodyfile="src/Server/src/Server.cpp" bodystart="137" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a1c1c4ff0f73d8afd484134756c5560bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::handle_tcp_connection</definition>
        <argsstring>(boost::asio::io_context &amp;io_context, tcp::socket socket)</argsstring>
        <name>handle_tcp_connection</name>
        <qualifiedname>Server::handle_tcp_connection</qualifiedname>
        <param>
          <type>boost::asio::io_context &amp;</type>
          <declname>io_context</declname>
        </param>
        <param>
          <type>tcp::socket</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="79" column="8" bodyfile="src/Server/src/Server.cpp" bodystart="83" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1ad4e0f7acc9b9c21655e719f955ad1333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::start_tcp_server</definition>
        <argsstring>(boost::asio::io_context &amp;io_context, int port)</argsstring>
        <name>start_tcp_server</name>
        <qualifiedname>Server::start_tcp_server</qualifiedname>
        <param>
          <type>boost::asio::io_context &amp;</type>
          <declname>io_context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="81" column="8" bodyfile="src/Server/src/Server.cpp" bodystart="125" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a5e56f156b78ab8d93383505a1a0cb503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::start_heartbeat_monitor</definition>
        <argsstring>(boost::asio::io_context &amp;io_context)</argsstring>
        <name>start_heartbeat_monitor</name>
        <qualifiedname>Server::start_heartbeat_monitor</qualifiedname>
        <param>
          <type>boost::asio::io_context &amp;</type>
          <declname>io_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="82" column="8" bodyfile="src/Server/src/robustness.cpp" bodystart="10" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1adce871091b9a432a39996bb6d3c307d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::handle_client_ping</definition>
        <argsstring>(const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>handle_client_ping</name>
        <qualifiedname>Server::handle_client_ping</qualifiedname>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="83" column="8" bodyfile="src/Server/src/robustness.cpp" bodystart="30" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1ad9bba72aa143da1b7f43bcb78d2fa4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::send_udp_with_ack</definition>
        <argsstring>(udp::socket &amp;socket, const std::vector&lt; uint8_t &gt; &amp;message, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>send_udp_with_ack</name>
        <qualifiedname>Server::send_udp_with_ack</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="84" column="8" bodyfile="src/Server/src/robustness.cpp" bodystart="41" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a0582d12fd37cda12d06db35ece424521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::handle_room_creation</definition>
        <argsstring>(udp::socket &amp;socket, const std::string &amp;room_name, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>handle_room_creation</name>
        <qualifiedname>Server::handle_room_creation</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>room_name</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="88" column="8" bodyfile="src/Server/src/server_room.cpp" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1ad870bdbd51745c26f476d64dac7dbdf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::handle_room_joining</definition>
        <argsstring>(udp::socket &amp;socket, int room_id, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>handle_room_joining</name>
        <qualifiedname>Server::handle_room_joining</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>int</type>
          <declname>room_id</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="90" column="8" bodyfile="src/Server/src/server_room.cpp" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1aa8edb9097c9c30cc31450e9837f06523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::handle_list_rooms</definition>
        <argsstring>(udp::socket &amp;socket, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>handle_list_rooms</name>
        <qualifiedname>Server::handle_list_rooms</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="92" column="8" bodyfile="src/Server/src/server_room.cpp" bodystart="52" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a1318e4e82a5075f39f1a7d146978f92e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::run_game</definition>
        <argsstring>()</argsstring>
        <name>run_game</name>
        <qualifiedname>Server::run_game</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="96" column="8" bodyfile="src/Server/src/Server.cpp" bodystart="25" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a81a0f407dfec7384d18ce56add98fce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Server::get_player_id</definition>
        <argsstring>(const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>get_player_id</name>
        <qualifiedname>Server::get_player_id</qualifiedname>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="106" column="7" bodyfile="src/Server/src/check_message.cpp" bodystart="10" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classServer_1a8b23573e108de83f85118223b2245b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::check_player_position</definition>
        <argsstring>(udp::socket &amp;socket, const std::vector&lt; uint8_t &gt; &amp;buffer, const udp::endpoint &amp;client_endpoint)</argsstring>
        <name>check_player_position</name>
        <qualifiedname>Server::check_player_position</qualifiedname>
        <param>
          <type>udp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const udp::endpoint &amp;</type>
          <declname>client_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="107" column="8" bodyfile="src/Server/src/check_message.cpp" bodystart="116" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>CollisionSystem</label>
        <link refid="classCollisionSystem"/>
      </node>
      <node id="3">
        <label>MouvementSystem</label>
        <link refid="classMouvementSystem"/>
      </node>
      <node id="2">
        <label>Registry</label>
        <link refid="classRegistry"/>
      </node>
      <node id="1">
        <label>Server</label>
        <link refid="classServer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>registry</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>movement</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>enemyTimer</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>collision</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>TimeManager</label>
        <link refid="classTimeManager"/>
      </node>
    </collaborationgraph>
    <location file="src/Server/include/Server.hpp" line="63" column="1" bodyfile="src/Server/include/Server.hpp" bodystart="63" bodyend="120"/>
    <listofallmembers>
      <member refid="classServer_1a11ff54c2dafcf3447428be775b215b3c" prot="public" virt="non-virtual"><scope>Server</scope><name>_connected_clients</name></member>
      <member refid="classServer_1afffd36a76004131cc81372f8cb7a36e0" prot="public" virt="non-virtual"><scope>Server</scope><name>_game_time_manager</name></member>
      <member refid="classServer_1a6b97b25172b3c31b6cd0f83963ecbbbf" prot="public" virt="non-virtual"><scope>Server</scope><name>check_player_message</name></member>
      <member refid="classServer_1a8b23573e108de83f85118223b2245b6e" prot="public" virt="non-virtual"><scope>Server</scope><name>check_player_position</name></member>
      <member refid="classServer_1af0b06c057375e964baaf2a00fb59ff16" prot="private" virt="non-virtual"><scope>Server</scope><name>clients</name></member>
      <member refid="classServer_1a1fd6450c69b29a8d03a47cae5a5d2ac3" prot="private" virt="non-virtual"><scope>Server</scope><name>clients_me</name></member>
      <member refid="classServer_1ae6d40b8cbc195aeb3b3c4736f9c9f115" prot="public" virt="non-virtual"><scope>Server</scope><name>collision</name></member>
      <member refid="classServer_1a379f70d7a47b7a1777ac3085962acb2f" prot="public" virt="non-virtual"><scope>Server</scope><name>enemy_count</name></member>
      <member refid="classServer_1a7b2e00c389aa96a2022ec6ed8a06448c" prot="public" virt="non-virtual"><scope>Server</scope><name>enemyTimer</name></member>
      <member refid="classServer_1a493e2f6cdc1ac7b34c7ba08e996af10d" prot="public" virt="non-virtual"><scope>Server</scope><name>game_run</name></member>
      <member refid="classServer_1a81a0f407dfec7384d18ce56add98fce2" prot="public" virt="non-virtual"><scope>Server</scope><name>get_player_id</name></member>
      <member refid="classServer_1adce871091b9a432a39996bb6d3c307d6" prot="public" virt="non-virtual"><scope>Server</scope><name>handle_client_ping</name></member>
      <member refid="classServer_1aa8edb9097c9c30cc31450e9837f06523" prot="public" virt="non-virtual"><scope>Server</scope><name>handle_list_rooms</name></member>
      <member refid="classServer_1a0582d12fd37cda12d06db35ece424521" prot="public" virt="non-virtual"><scope>Server</scope><name>handle_room_creation</name></member>
      <member refid="classServer_1ad870bdbd51745c26f476d64dac7dbdf6" prot="public" virt="non-virtual"><scope>Server</scope><name>handle_room_joining</name></member>
      <member refid="classServer_1a1c1c4ff0f73d8afd484134756c5560bd" prot="public" virt="non-virtual"><scope>Server</scope><name>handle_tcp_connection</name></member>
      <member refid="classServer_1a5cd60e8f153c791812d9b497a86116fa" prot="public" virt="non-virtual"><scope>Server</scope><name>id_name</name></member>
      <member refid="classServer_1a7cf9c7008b64401b78ea15e72afabfc3" prot="public" virt="non-virtual"><scope>Server</scope><name>movement</name></member>
      <member refid="classServer_1a38608834a44a8280bf55ba56b791ba25" prot="public" virt="non-virtual"><scope>Server</scope><name>notify_clients_of_disconnection</name></member>
      <member refid="classServer_1a8215c317c9ccea1af12bffe1d3a4e7c5" prot="public" virt="non-virtual"><scope>Server</scope><name>players_count</name></member>
      <member refid="classServer_1adb641bb1d2dd1c0ba6f93645b4107cb6" prot="public" virt="non-virtual"><scope>Server</scope><name>process_message</name></member>
      <member refid="classServer_1a71163324a3460436e0df6905a141d682" prot="public" virt="non-virtual"><scope>Server</scope><name>process_message_contain</name></member>
      <member refid="classServer_1a37bf1bdfe9f658722d2e6986aee87455" prot="public" virt="non-virtual"><scope>Server</scope><name>registry</name></member>
      <member refid="classServer_1a9d30de1bda496b9c10aed129ac7a9640" prot="private" virt="non-virtual"><scope>Server</scope><name>room_system</name></member>
      <member refid="classServer_1a1318e4e82a5075f39f1a7d146978f92e" prot="public" virt="non-virtual"><scope>Server</scope><name>run_game</name></member>
      <member refid="classServer_1ad9bba72aa143da1b7f43bcb78d2fa4e5" prot="public" virt="non-virtual"><scope>Server</scope><name>send_udp_with_ack</name></member>
      <member refid="classServer_1ad4b85696fb2da1ebc1a52874336de7e1" prot="public" virt="non-virtual"><scope>Server</scope><name>Server</name></member>
      <member refid="classServer_1a5e56f156b78ab8d93383505a1a0cb503" prot="public" virt="non-virtual"><scope>Server</scope><name>start_heartbeat_monitor</name></member>
      <member refid="classServer_1ad4e0f7acc9b9c21655e719f955ad1333" prot="public" virt="non-virtual"><scope>Server</scope><name>start_tcp_server</name></member>
      <member refid="classServer_1ae8cbcb754a370d6f8fd64bb44f4af8bc" prot="public" virt="non-virtual"><scope>Server</scope><name>start_udp_server</name></member>
      <member refid="classServer_1a4b3aa2579cb1c8cd1d069582c14d0fa6" prot="public" virt="non-virtual"><scope>Server</scope><name>~Server</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
