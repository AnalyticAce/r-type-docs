<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="GameLogic_2Vector_8hpp" kind="file" language="C++">
    <compoundname>Vector.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">array</includes>
    <includes local="no">cctype</includes>
    <includes local="no">cmath</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">limits</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">regex</includes>
    <includes local="no">sstream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="no">tuple</includes>
    <includes local="no">vector</includes>
    <includedby refid="GameLogic_2Entity_8hpp" local="yes">src/GameLogic/Entity.hpp</includedby>
    <includedby refid="GameLogic_2Vector3D_8cpp" local="yes">src/GameLogic/Vector3D.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/GameLogic/Vector.hpp</label>
        <link refid="GameLogic_2Vector_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>array</label>
      </node>
      <node id="4">
        <label>cctype</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="11">
        <label>regex</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="15">
        <label>tuple</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>src/GameLogic/Coin_system.cpp</label>
        <link refid="GameLogic_2Coin__system_8cpp"/>
      </node>
      <node id="3">
        <label>src/GameLogic/Coin_system.hpp</label>
        <link refid="GameLogic_2Coin__system_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/GameLogic/Collision_system.cpp</label>
        <link refid="GameLogic_2Collision__system_8cpp"/>
      </node>
      <node id="6">
        <label>src/GameLogic/Collision_system.hpp</label>
        <link refid="GameLogic_2Collision__system_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/GameLogic/Entity.cpp</label>
        <link refid="GameLogic_2Entity_8cpp"/>
      </node>
      <node id="2">
        <label>src/GameLogic/Entity.hpp</label>
        <link refid="GameLogic_2Entity_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/GameLogic/Health_system.cpp</label>
        <link refid="GameLogic_2Health__system_8cpp"/>
      </node>
      <node id="9">
        <label>src/GameLogic/Health_system.hpp</label>
        <link refid="GameLogic_2Health__system_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/GameLogic/Mouvement_system.cpp</label>
        <link refid="GameLogic_2Mouvement__system_8cpp"/>
      </node>
      <node id="11">
        <label>src/GameLogic/Mouvement_system.hpp</label>
        <link refid="GameLogic_2Mouvement__system_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/GameLogic/Shoot_system.cpp</label>
        <link refid="GameLogic_2Shoot__system_8cpp"/>
      </node>
      <node id="13">
        <label>src/GameLogic/Shoot_system.hpp</label>
        <link refid="GameLogic_2Shoot__system_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/GameLogic/Time_manager.cpp</label>
        <link refid="GameLogic_2Time__manager_8cpp"/>
      </node>
      <node id="15">
        <label>src/GameLogic/Time_manager.hpp</label>
        <link refid="GameLogic_2Time__manager_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/GameLogic/Vector.hpp</label>
        <link refid="GameLogic_2Vector_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/GameLogic/Vector3D.cpp</label>
        <link refid="GameLogic_2Vector3D_8cpp"/>
      </node>
      <node id="5">
        <label>src/GameLogic/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classVector2D" prot="public">Vector2D</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="GameLogic_2Vector_8hpp_1af4b13589fa366fbabcf5d494e0c3e6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classVector2D" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D operator+</definition>
        <argsstring>(const Vector2D &amp;u, const Vector2D &amp;v)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classVector2D" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classVector2D" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Overloads the + operator for vector addition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>The first vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The second vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the vector addition. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/GameLogic/Vector.hpp" line="148" column="10" bodyfile="src/GameLogic/Vector3D.cpp" bodystart="10" bodyend="12" declfile="src/GameLogic/Vector.hpp" declline="148" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="GameLogic_2Vector_8hpp_1a70da58fb3058fe0385e674366a04951b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classVector2D" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D operator-</definition>
        <argsstring>(const Vector2D &amp;p, const Vector2D &amp;n)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classVector2D" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classVector2D" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Overloads the - operator for vector subtraction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The first vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The second vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the vector subtraction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/GameLogic/Vector.hpp" line="156" column="10" bodyfile="src/GameLogic/Vector3D.cpp" bodystart="13" bodyend="15" declfile="src/GameLogic/Vector.hpp" declline="156" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="GameLogic_2Vector_8hpp_1abe830b97e6c3fe2df5ac44322d0decea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classVector2D" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D operator*</definition>
        <argsstring>(double scalar, const Vector2D &amp;v)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type>const <ref refid="classVector2D" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Overloads the * operator for scalar multiplication. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to multiply the vector by. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to multiply. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the scalar multiplication. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/GameLogic/Vector.hpp" line="164" column="10" bodyfile="src/GameLogic/Vector3D.cpp" bodystart="16" bodyend="18" declfile="src/GameLogic/Vector.hpp" declline="164" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="GameLogic_2Vector_8hpp_1a05e1fbf1cc712a252249a0b14674c458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classVector2D" kindref="compound">Vector2D</ref></type>
        <definition>Vector2D operator*</definition>
        <argsstring>(const Vector2D &amp;v, int scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classVector2D" kindref="compound">Vector2D</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Overloads the * operator for scalar multiplication. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to multiply. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar to multiply the vector by. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the scalar multiplication. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/GameLogic/Vector.hpp" line="172" column="10" bodyfile="src/GameLogic/Vector3D.cpp" bodystart="19" bodyend="21" declfile="src/GameLogic/Vector.hpp" declline="172" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2023</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>B-OOP-400-COT-4-1-raytracer-shalom.dosseh</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Vector.hpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cctype&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;regex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classVector2D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref>;<sp/></highlight></codeline>
<codeline lineno="33" refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>;<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classVector2D_1a98e9997ebb7a629f4db52397d4e0d653" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D_1a98e9997ebb7a629f4db52397d4e0d653" kindref="member">Vector2D</ref>()<sp/>:<sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref>(0),<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classVector2D_1a525e125aac4c844f04c52ddb0e75d594" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D_1a525e125aac4c844f04c52ddb0e75d594" kindref="member">Vector2D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>)<sp/>:<sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref>(<ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref>),<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>(<ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classVector2D_1ab08635b0482451cc43b5b399034eff2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ab08635b0482451cc43b5b399034eff2f" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(<ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>*<sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>+<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>*<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>);<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classVector2D_1aa50e02d1ccaa6004f0251fbb795bf5b4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/><ref refid="classVector2D_1aa50e02d1ccaa6004f0251fbb795bf5b4" kindref="member">vector_unit</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/><ref refid="classVector2D_1ab08635b0482451cc43b5b399034eff2f" kindref="member">length</ref>();<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classVector2D_1acd8224bbfb5080c324ea669a685083a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;<ref refid="classVector2D_1acd8224bbfb5080c324ea669a685083a3" kindref="member">operator/=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classVector2D_1a7ebf0f26823b095ec64722b3b1e1cc24" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/><ref refid="classVector2D_1a7ebf0f26823b095ec64722b3b1e1cc24" kindref="member">operator/</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalar)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>result(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classVector2D_1aedca2e0def2c047e2c6ee15572e63780" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1aedca2e0def2c047e2c6ee15572e63780" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>*<sp/>other.<ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>+<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>*<sp/>other.<ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>;<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classVector2D_1a941b244c488b9266a91bb143c9ce5554" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1a941b244c488b9266a91bb143c9ce5554" kindref="member">length_squared</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>*<sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>+<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>*<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classVector2D_1a0bb684df2d724e4378dc5fbf0d4faa99" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/><ref refid="classVector2D_1a0bb684df2d724e4378dc5fbf0d4faa99" kindref="member">normalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1ab08635b0482451cc43b5b399034eff2f" kindref="member">length</ref><sp/>=<sp/>std::sqrt(<ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>*<sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>+<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>*<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classVector2D_1a98e9997ebb7a629f4db52397d4e0d653" kindref="member">Vector2D</ref>(<ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>/<sp/><ref refid="classVector2D_1ab08635b0482451cc43b5b399034eff2f" kindref="member">length</ref>,<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>/<sp/><ref refid="classVector2D_1ab08635b0482451cc43b5b399034eff2f" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>add<sp/>two<sp/>vectors</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>vector<sp/>v</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Vector2D&amp;</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classVector2D_1a919e3f060b98a77dbc63fa4312a18ac3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;<ref refid="classVector2D_1a919e3f060b98a77dbc63fa4312a18ac3" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>+=<sp/>v.<ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>+=<sp/>v.<ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classVector2D_1a46624701d6c7814a763b3b5d1820ec19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;<ref refid="classVector2D_1a46624701d6c7814a763b3b5d1820ec19" kindref="member">scale</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>rotate<sp/>the<sp/>vector<sp/>by<sp/>an<sp/>angle</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>double<sp/>angle</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Vector2D&amp;</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classVector2D_1a11a15f2a205a52747ca9fb370aa54f03" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;<ref refid="classVector2D_1a11a15f2a205a52747ca9fb370aa54f03" kindref="member">rotate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rad<sp/>=<sp/>angle<sp/>*<sp/>M_PI<sp/>/<sp/>180;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>cos(rad);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>sin(rad);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nx<sp/>=<sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>*<sp/>c<sp/>-<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ny<sp/>=<sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>*<sp/>s<sp/>+<sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac5c4e553815737aa24bec8281270178f" kindref="member">x</ref><sp/>=<sp/>nx;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classVector2D_1ac38d0179cfe74c30fee290a703ab209a" kindref="member">y</ref><sp/>=<sp/>ny;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/><ref refid="GameLogic_2Vector_8hpp_1af4b13589fa366fbabcf5d494e0c3e6a0" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/><ref refid="GameLogic_2Vector_8hpp_1a70da58fb3058fe0385e674366a04951b" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;n);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/><ref refid="GameLogic_2Vector_8hpp_1abe830b97e6c3fe2df5ac44322d0decea" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/><ref refid="GameLogic_2Vector_8hpp_1abe830b97e6c3fe2df5ac44322d0decea" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classVector2D" kindref="compound">Vector2D</ref><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scalar);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!VECTOR_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/GameLogic/Vector.hpp"/>
  </compounddef>
</doxygen>
