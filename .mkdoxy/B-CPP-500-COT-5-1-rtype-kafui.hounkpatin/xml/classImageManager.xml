<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classImageManager" kind="class" language="C++" prot="public">
    <compoundname>ImageManager</compoundname>
    <includes refid="ImageManager_8hpp" local="no">ImageManager.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classImageManager_1aa7783c2def8474c05a17bbb952c58c01" prot="public" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture ImageManager::texture</definition>
        <argsstring></argsstring>
        <name>texture</name>
        <qualifiedname>ImageManager::texture</qualifiedname>
        <briefdescription>
<para>Texture object for storing the image data. </para>
        </briefdescription>
        <detaileddescription>
<para>The sf::Texture object holds the image data loaded from a file, which is applied to the sprite for rendering. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="103" column="17" bodyfile="include/Engine/Image/ImageManager.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classImageManager_1adb1ea838f50e810daed3701bd853b5c3" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite ImageManager::sprite</definition>
        <argsstring></argsstring>
        <name>sprite</name>
        <qualifiedname>ImageManager::sprite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="115" column="16" bodyfile="include/Engine/Image/ImageManager.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classImageManager_1a8c856af0e3f0d23da7c765b0e33e585e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ImageManager::ImageManager</definition>
        <argsstring>()</argsstring>
        <name>ImageManager</name>
        <qualifiedname>ImageManager::ImageManager</qualifiedname>
        <briefdescription>
<para>Constructs an <ref refid="classImageManager" kindref="compound">ImageManager</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the <ref refid="classImageManager" kindref="compound">ImageManager</ref> to handle image loading and rendering. This constructor prepares the necessary objects for managing images. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="27" column="5" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="3" bodyend="3"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1a3cad118fdf026d379641fb6b52cd1884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ImageManager::~ImageManager</definition>
        <argsstring>()</argsstring>
        <name>~ImageManager</name>
        <qualifiedname>ImageManager::~ImageManager</qualifiedname>
        <briefdescription>
<para>Destructs the <ref refid="classImageManager" kindref="compound">ImageManager</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleans up any resources used for image handling and rendering, ensuring proper memory deallocation and resource management. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="35" column="5" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="5" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1ae538700efd9a04a6fd367628bb81687a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ImageManager::createImage</definition>
        <argsstring>(const std::string &amp;filePath)</argsstring>
        <name>createImage</name>
        <qualifiedname>ImageManager::createImage</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Loads an image from the specified file path. </para>
        </briefdescription>
        <detaileddescription>
<para>Loads an image into an sf::Texture object from the provided file path and applies it to an sf::Sprite for rendering.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>A string representing the file path of the image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if the image is successfully loaded, false otherwise. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the image file cannot be loaded.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Supported image formats include PNG, JPEG, and BMP. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="49" column="10" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="7" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1a9f4e347cd5dc78b9a4e67aa2d5178f89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImageManager::setPosition</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>setPosition</name>
        <qualifiedname>ImageManager::setPosition</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Sets the position of the sprite on the screen. </para>
        </briefdescription>
        <detaileddescription>
<para>Adjusts the position of the image sprite to the specified x and y coordinates within the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>A float representing the x-coordinate of the new position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>A float representing the y-coordinate of the new position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="60" column="10" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1a959834d402f25003890fbdc122057bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImageManager::setScale</definition>
        <argsstring>(float scaleX, float scaleY)</argsstring>
        <name>setScale</name>
        <qualifiedname>ImageManager::setScale</qualifiedname>
        <param>
          <type>float</type>
          <declname>scaleX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scaleY</declname>
        </param>
        <briefdescription>
<para>Sets the scale of the image sprite. </para>
        </briefdescription>
        <detaileddescription>
<para>Resizes the image sprite by setting its scale factors along the x and y axes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaleX</parametername>
</parameternamelist>
<parameterdescription>
<para>A float representing the scaling factor along the x-axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scaleY</parametername>
</parameternamelist>
<parameterdescription>
<para>A float representing the scaling factor along the y-axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="70" column="10" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1af38896fbfd2d2b505f52cecadb23ee95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImageManager::draw</definition>
        <argsstring>(sf::RenderWindow &amp;window)</argsstring>
        <name>draw</name>
        <qualifiedname>ImageManager::draw</qualifiedname>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Draws the image sprite to the specified render window. </para>
        </briefdescription>
        <detaileddescription>
<para>Renders the sprite on the provided sf::RenderWindow.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the sf::RenderWindow where the sprite will be drawn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="79" column="10" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1af5ab1a6d7ba480a283e0c9c4f256001b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImageManager::destroyImage</definition>
        <argsstring>()</argsstring>
        <name>destroyImage</name>
        <qualifiedname>ImageManager::destroyImage</qualifiedname>
        <briefdescription>
<para>Destroys the image and releases its resources. </para>
        </briefdescription>
        <detaileddescription>
<para>Cleans up the loaded image and resets the texture and sprite. This is useful for freeing up memory when the image is no longer needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="87" column="10" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1a5322bf5766be6dff2257a5833bca917e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::FloatRect</type>
        <definition>sf::FloatRect ImageManager::getGlobalBounds</definition>
        <argsstring>()</argsstring>
        <name>getGlobalBounds</name>
        <qualifiedname>ImageManager::getGlobalBounds</qualifiedname>
        <briefdescription>
<para>Gets the global bounding rectangle of the sprite. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the boundaries of the sprite in global coordinates, which can be used for collision detection or aligning sprites.</para>
<para><simplesect kind="return"><para>An sf::FloatRect object representing the global bounding box of the sprite. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="97" column="19" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1a577de35dc5e857308bfd27d8fe519c92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>sf::Sprite &amp;</type>
        <definition>sf::Sprite &amp; ImageManager::getSprite</definition>
        <argsstring>()</argsstring>
        <name>getSprite</name>
        <qualifiedname>ImageManager::getSprite</qualifiedname>
        <briefdescription>
<para>Sprite object for rendering the image. </para>
        </briefdescription>
        <detaileddescription>
<para>The sf::Sprite object is used to display the image stored in the texture. It supports transformations such as scaling, rotation, and translation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="111" column="16" bodyfile="include/Engine/Image/ImageManager.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1ad682666ef2fbc6bc3b72d1be37b2c47d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const sf::Sprite &amp;</type>
        <definition>const sf::Sprite &amp; ImageManager::getSprite</definition>
        <argsstring>() const</argsstring>
        <name>getSprite</name>
        <qualifiedname>ImageManager::getSprite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="112" column="22" bodyfile="include/Engine/Image/ImageManager.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classImageManager_1accc94d2ff77fa878d7c2b326f81f4565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImageManager::fitToScreen</definition>
        <argsstring>(float windowWidth, float windowHeight)</argsstring>
        <name>fitToScreen</name>
        <qualifiedname>ImageManager::fitToScreen</qualifiedname>
        <param>
          <type>float</type>
          <declname>windowWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>windowHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Image/ImageManager.hpp" line="113" column="10" bodyfile="src/Engine/Image/ImageManager.cpp" bodystart="31" bodyend="46"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Handles image loading, manipulation, and rendering using the SFML graphics library. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classImageManager" kindref="compound">ImageManager</ref> class provides a set of methods to manage and display 2D images using SFML. It supports loading images from files, positioning, scaling, and drawing them on the screen via an sf::RenderWindow.</para>
<para><simplesect kind="note"><para><ref refid="classImageManager" kindref="compound">ImageManager</ref> assumes the image resources are properly initialized, and the paths provided are valid image file formats supported by SFML. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/Engine/Image/ImageManager.hpp" line="19" column="1" bodyfile="include/Engine/Image/ImageManager.hpp" bodystart="19" bodyend="116"/>
    <listofallmembers>
      <member refid="classImageManager_1ae538700efd9a04a6fd367628bb81687a" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>createImage</name></member>
      <member refid="classImageManager_1af5ab1a6d7ba480a283e0c9c4f256001b" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>destroyImage</name></member>
      <member refid="classImageManager_1af38896fbfd2d2b505f52cecadb23ee95" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>draw</name></member>
      <member refid="classImageManager_1accc94d2ff77fa878d7c2b326f81f4565" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>fitToScreen</name></member>
      <member refid="classImageManager_1a5322bf5766be6dff2257a5833bca917e" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>getGlobalBounds</name></member>
      <member refid="classImageManager_1a577de35dc5e857308bfd27d8fe519c92" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>getSprite</name></member>
      <member refid="classImageManager_1ad682666ef2fbc6bc3b72d1be37b2c47d" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>getSprite</name></member>
      <member refid="classImageManager_1a8c856af0e3f0d23da7c765b0e33e585e" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>ImageManager</name></member>
      <member refid="classImageManager_1a9f4e347cd5dc78b9a4e67aa2d5178f89" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>setPosition</name></member>
      <member refid="classImageManager_1a959834d402f25003890fbdc122057bb1" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>setScale</name></member>
      <member refid="classImageManager_1adb1ea838f50e810daed3701bd853b5c3" prot="private" virt="non-virtual"><scope>ImageManager</scope><name>sprite</name></member>
      <member refid="classImageManager_1aa7783c2def8474c05a17bbb952c58c01" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>texture</name></member>
      <member refid="classImageManager_1a3cad118fdf026d379641fb6b52cd1884" prot="public" virt="non-virtual"><scope>ImageManager</scope><name>~ImageManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
