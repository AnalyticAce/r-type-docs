<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structInputManager_1_1Button" kind="struct" language="C++" prot="private">
    <compoundname>InputManager::Button</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structInputManager_1_1Button_1afb652fc9ac84791fe9e834b5f6256be1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InputManager::Button::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <qualifiedname>InputManager::Button::left</qualifiedname>
        <briefdescription>
<para>Indicates whether the &quot;left&quot; key is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Input/InputManager.hpp" line="25" column="10" bodyfile="include/Engine/Input/InputManager.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structInputManager_1_1Button_1a2b9b0670c704a08976bf6d2b993af82e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InputManager::Button::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <qualifiedname>InputManager::Button::right</qualifiedname>
        <briefdescription>
<para>Indicates whether the &quot;right&quot; key is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Input/InputManager.hpp" line="26" column="10" bodyfile="include/Engine/Input/InputManager.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structInputManager_1_1Button_1a10c22c080bf86fa8864860963b057b6f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InputManager::Button::up</definition>
        <argsstring></argsstring>
        <name>up</name>
        <qualifiedname>InputManager::Button::up</qualifiedname>
        <briefdescription>
<para>Indicates whether the &quot;up&quot; key is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Input/InputManager.hpp" line="27" column="10" bodyfile="include/Engine/Input/InputManager.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structInputManager_1_1Button_1ac3ef339608f7279973b35c27b341c1d8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InputManager::Button::down</definition>
        <argsstring></argsstring>
        <name>down</name>
        <qualifiedname>InputManager::Button::down</qualifiedname>
        <briefdescription>
<para>Indicates whether the &quot;down&quot; key is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Input/InputManager.hpp" line="28" column="10" bodyfile="include/Engine/Input/InputManager.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structInputManager_1_1Button_1abae780d63376f2ba1ac7ef635040cd69" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InputManager::Button::attack</definition>
        <argsstring></argsstring>
        <name>attack</name>
        <qualifiedname>InputManager::Button::attack</qualifiedname>
        <briefdescription>
<para>Indicates whether the &quot;attack&quot; key is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Input/InputManager.hpp" line="29" column="10" bodyfile="include/Engine/Input/InputManager.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structInputManager_1_1Button_1abbcc061375ba382ef800a9cc98290f6c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool InputManager::Button::escape</definition>
        <argsstring></argsstring>
        <name>escape</name>
        <qualifiedname>InputManager::Button::escape</qualifiedname>
        <briefdescription>
<para>Indicates whether the &quot;escape&quot; key is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Engine/Input/InputManager.hpp" line="30" column="10" bodyfile="include/Engine/Input/InputManager.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Tracks the state of specific control buttons. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure holds boolean flags for various buttons like movement keys (left, right, up, down), attack, and escape. Each flag is set to true when the corresponding key is pressed and false when released. </para>
    </detaileddescription>
    <location file="include/Engine/Input/InputManager.hpp" line="24" column="3" bodyfile="include/Engine/Input/InputManager.hpp" bodystart="24" bodyend="31"/>
    <listofallmembers>
      <member refid="structInputManager_1_1Button_1abae780d63376f2ba1ac7ef635040cd69" prot="public" virt="non-virtual"><scope>InputManager::Button</scope><name>attack</name></member>
      <member refid="structInputManager_1_1Button_1ac3ef339608f7279973b35c27b341c1d8" prot="public" virt="non-virtual"><scope>InputManager::Button</scope><name>down</name></member>
      <member refid="structInputManager_1_1Button_1abbcc061375ba382ef800a9cc98290f6c" prot="public" virt="non-virtual"><scope>InputManager::Button</scope><name>escape</name></member>
      <member refid="structInputManager_1_1Button_1afb652fc9ac84791fe9e834b5f6256be1" prot="public" virt="non-virtual"><scope>InputManager::Button</scope><name>left</name></member>
      <member refid="structInputManager_1_1Button_1a2b9b0670c704a08976bf6d2b993af82e" prot="public" virt="non-virtual"><scope>InputManager::Button</scope><name>right</name></member>
      <member refid="structInputManager_1_1Button_1a10c22c080bf86fa8864860963b057b6f" prot="public" virt="non-virtual"><scope>InputManager::Button</scope><name>up</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
