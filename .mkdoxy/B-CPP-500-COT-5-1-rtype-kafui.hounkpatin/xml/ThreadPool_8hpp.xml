<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="ThreadPool_8hpp" kind="file" language="C++">
    <compoundname>ThreadPool.hpp</compoundname>
    <includes local="no">boost/asio.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes local="no">vector</includes>
    <includedby refid="Server_8hpp" local="yes">src/Server/include/Server.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/Server/include/ThreadPool.hpp</label>
        <link refid="ThreadPool_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>boost/asio.hpp</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>thread</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/Server/include/Client.hpp</label>
        <link refid="Client_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/Server/include/Server.hpp</label>
        <link refid="Server_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Server/include/ThreadPool.hpp</label>
        <link refid="ThreadPool_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/Server/src/Client.cpp</label>
        <link refid="Client_8cpp"/>
      </node>
      <node id="5">
        <label>src/Server/src/Server.cpp</label>
        <link refid="Server_8cpp"/>
      </node>
      <node id="6">
        <label>src/Server/src/check_message.cpp</label>
        <link refid="check__message_8cpp"/>
      </node>
      <node id="7">
        <label>src/Server/src/check_params.cpp</label>
        <link refid="check__params_8cpp"/>
      </node>
      <node id="8">
        <label>src/Server/src/robustness.cpp</label>
        <link refid="robustness_8cpp"/>
      </node>
      <node id="9">
        <label>src/Server/src/server_room.cpp</label>
        <link refid="server__room_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classThreadPool" prot="public">ThreadPool</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2024</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>threadpool</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>ThreadPool</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>THREADPOOL_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREADPOOL_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classThreadPool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classThreadPool" kindref="compound">ThreadPool</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17" refid="classThreadPool_1a9d4f2a7da50ded6231873c0cb32b78a1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classThreadPool_1a9d4f2a7da50ded6231873c0cb32b78a1" kindref="member">ThreadPool</ref>(boost::asio::io_context<sp/>&amp;io_context,<sp/>std::size_t<sp/>num_threads)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>io_context(io_context)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classThreadPool_1aec4fdccd497a2e5d2c241414f1babe98" kindref="member">add_threads</ref>(num_threads);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21" refid="classThreadPool_1a44d3d2ab618970605e684efc216655eb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classThreadPool_1a44d3d2ab618970605e684efc216655eb" kindref="member">~ThreadPool</ref>()<sp/>{<sp/><ref refid="classThreadPool_1a6caabfe3941cd94fa0655a4fd0df77bc" kindref="member">release</ref>();<sp/>};</highlight></codeline>
<codeline lineno="22" refid="classThreadPool_1aec4fdccd497a2e5d2c241414f1babe98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classThreadPool_1aec4fdccd497a2e5d2c241414f1babe98" kindref="member">add_threads</ref>(std::size_t<sp/>num_threads)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_threads;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thread_pool.emplace_back([</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/>io_context.run();<sp/>});</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classThreadPool_1a7cd0f9b042ee0c76fb26de0b02769c6c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classThreadPool_1a7cd0f9b042ee0c76fb26de0b02769c6c" kindref="member">remove_threads</ref>(std::size_t<sp/>num_threads)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_threads<sp/>&amp;&amp;<sp/>!thread_pool.empty();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thread_pool.back().joinable())<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_pool.back().join();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thread_pool.pop_back();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classThreadPool_1a6caabfe3941cd94fa0655a4fd0df77bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classThreadPool_1a6caabfe3941cd94fa0655a4fd0df77bc" kindref="member">release</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>io_context.stop();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;thread<sp/>:<sp/>thread_pool)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thread.joinable())<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread.join();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>thread_pool.clear();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>std::vector&lt;std::thread&gt;<sp/>thread_pool;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>boost::asio::io_context<sp/>&amp;io_context;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!THREADPOOL_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/Server/include/ThreadPool.hpp"/>
  </compounddef>
</doxygen>
