<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classCollisionSystem" kind="class" language="C++" prot="public">
    <compoundname>CollisionSystem</compoundname>
    <includes refid="Server_2include_2Collision__system_8hpp" local="no">Collision_system.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classCollisionSystem_1ac8b1ff32bb9c9ff3e765c2b334713454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CollisionSystem::CollisionSystem</definition>
        <argsstring>()</argsstring>
        <name>CollisionSystem</name>
        <qualifiedname>CollisionSystem::CollisionSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Collision_system.hpp" line="15" column="3" bodyfile="src/Server/include/Collision_system.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classCollisionSystem_1a128d2a8b457f119368f0c9fc95ed61f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CollisionSystem::~CollisionSystem</definition>
        <argsstring>()</argsstring>
        <name>~CollisionSystem</name>
        <qualifiedname>CollisionSystem::~CollisionSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Collision_system.hpp" line="16" column="3" bodyfile="src/Server/include/Collision_system.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classCollisionSystem_1a4037d7993a8a9ba7d81f359851afb6e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CollisionSystem::collision_player_enemy</definition>
        <argsstring>(Registry &amp;registry)</argsstring>
        <name>collision_player_enemy</name>
        <qualifiedname>CollisionSystem::collision_player_enemy</qualifiedname>
        <param>
          <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Collision_system.hpp" line="17" column="8" bodyfile="src/Server/src/Collision_system.cpp" bodystart="10" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classCollisionSystem_1aa6270702e3f9c496882f6c2ede11a834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CollisionSystem::collison_player_coins</definition>
        <argsstring>(Registry &amp;registry)</argsstring>
        <name>collison_player_coins</name>
        <qualifiedname>CollisionSystem::collison_player_coins</qualifiedname>
        <param>
          <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Collision_system.hpp" line="18" column="8" bodyfile="src/Server/src/Collision_system.cpp" bodystart="44" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classCollisionSystem_1a7a7d156ecccbfd772a19e4fe147d249f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CollisionSystem::collision_enemy_projectiles</definition>
        <argsstring>(Registry &amp;registry)</argsstring>
        <name>collision_enemy_projectiles</name>
        <qualifiedname>CollisionSystem::collision_enemy_projectiles</qualifiedname>
        <param>
          <type><ref refid="classRegistry" kindref="compound">Registry</ref> &amp;</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Collision_system.hpp" line="19" column="8" bodyfile="src/Server/src/Collision_system.cpp" bodystart="76" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classCollisionSystem_1a4d149b7243493eef7aaf485d5dd89f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CollisionSystem::check_collision</definition>
        <argsstring>(std::shared_ptr&lt; Entity &gt; &amp;proj, std::shared_ptr&lt; Entity &gt; &amp;enemy)</argsstring>
        <name>check_collision</name>
        <qualifiedname>CollisionSystem::check_collision</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classEntity" kindref="compound">Entity</ref> &gt; &amp;</type>
          <declname>proj</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classEntity" kindref="compound">Entity</ref> &gt; &amp;</type>
          <declname>enemy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Collision_system.hpp" line="20" column="8" bodyfile="src/Server/src/Collision_system.cpp" bodystart="89" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Server/include/Collision_system.hpp" line="13" column="1" bodyfile="src/Server/include/Collision_system.hpp" bodystart="13" bodyend="22"/>
    <listofallmembers>
      <member refid="classCollisionSystem_1a4d149b7243493eef7aaf485d5dd89f99" prot="public" virt="non-virtual"><scope>CollisionSystem</scope><name>check_collision</name></member>
      <member refid="classCollisionSystem_1a7a7d156ecccbfd772a19e4fe147d249f" prot="public" virt="non-virtual"><scope>CollisionSystem</scope><name>collision_enemy_projectiles</name></member>
      <member refid="classCollisionSystem_1a4037d7993a8a9ba7d81f359851afb6e5" prot="public" virt="non-virtual"><scope>CollisionSystem</scope><name>collision_player_enemy</name></member>
      <member refid="classCollisionSystem_1ac8b1ff32bb9c9ff3e765c2b334713454" prot="public" virt="non-virtual"><scope>CollisionSystem</scope><name>CollisionSystem</name></member>
      <member refid="classCollisionSystem_1aa6270702e3f9c496882f6c2ede11a834" prot="public" virt="non-virtual"><scope>CollisionSystem</scope><name>collison_player_coins</name></member>
      <member refid="classCollisionSystem_1a128d2a8b457f119368f0c9fc95ed61f6" prot="public" virt="non-virtual"><scope>CollisionSystem</scope><name>~CollisionSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
