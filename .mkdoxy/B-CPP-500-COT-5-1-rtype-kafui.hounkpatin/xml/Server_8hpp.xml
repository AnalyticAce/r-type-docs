<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="Server_8hpp" kind="file" language="C++">
    <compoundname>Server.hpp</compoundname>
    <includes refid="protocol_8hpp" local="yes">../include/protocol.hpp</includes>
    <includes refid="ThreadPool_8hpp" local="yes">ThreadPool.hpp</includes>
    <includes refid="room__system_8hpp" local="yes">room_system.hpp</includes>
    <includes local="no">array</includes>
    <includes local="no">boost/asio.hpp</includes>
    <includes local="no">boost/bind/bind.hpp</includes>
    <includes local="no">chrono</includes>
    <includes local="no">cstring</includes>
    <includes local="no">functional</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">string_view</includes>
    <includes local="no">thread</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes refid="Server_2include_2Coin__system_8hpp" local="yes">Coin_system.hpp</includes>
    <includes refid="Server_2include_2Collision__system_8hpp" local="yes">Collision_system.hpp</includes>
    <includes refid="Server_2include_2Entity_8hpp" local="yes">Entity.hpp</includes>
    <includes refid="Server_2include_2Health__system_8hpp" local="yes">Health_system.hpp</includes>
    <includes refid="Server_2include_2Mouvement__system_8hpp" local="yes">Mouvement_system.hpp</includes>
    <includes refid="Server_2include_2Shoot__system_8hpp" local="yes">Shoot_system.hpp</includes>
    <includes refid="Server_2include_2Time__manager_8hpp" local="yes">Time_manager.hpp</includes>
    <includedby refid="Client_8hpp" local="yes">src/Server/include/Client.hpp</includedby>
    <includedby refid="Server_8cpp" local="yes">src/Server/src/Server.cpp</includedby>
    <includedby refid="check__message_8cpp" local="yes">src/Server/src/check_message.cpp</includedby>
    <includedby refid="check__params_8cpp" local="yes">src/Server/src/check_params.cpp</includedby>
    <includedby refid="robustness_8cpp" local="yes">src/Server/src/robustness.cpp</includedby>
    <includedby refid="server__room_8cpp" local="yes">src/Server/src/server_room.cpp</includedby>
    <incdepgraph>
      <node id="20">
        <label>Coin_system.hpp</label>
        <link refid="Server_2include_2Coin__system_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Collision_system.hpp</label>
        <link refid="Server_2include_2Collision__system_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Entity.hpp</label>
        <link refid="Server_2include_2Entity_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Health_system.hpp</label>
        <link refid="Server_2include_2Health__system_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Mouvement_system.hpp</label>
        <link refid="Server_2include_2Mouvement__system_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Server/include/Server.hpp</label>
        <link refid="Server_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Shoot_system.hpp</label>
        <link refid="Server_2include_2Shoot__system_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ThreadPool.hpp</label>
        <link refid="ThreadPool_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Time_manager.hpp</label>
        <link refid="Server_2include_2Time__manager_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Vector.hpp</label>
        <link refid="Server_2include_2Vector_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../include/protocol.hpp</label>
        <link refid="protocol_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>room_system.hpp</label>
        <link refid="room__system_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
      <node id="33">
        <label>any</label>
      </node>
      <node id="14">
        <label>array</label>
      </node>
      <node id="8">
        <label>boost/asio.hpp</label>
      </node>
      <node id="15">
        <label>boost/bind/bind.hpp</label>
      </node>
      <node id="34">
        <label>cassert</label>
      </node>
      <node id="23">
        <label>cctype</label>
      </node>
      <node id="16">
        <label>chrono</label>
      </node>
      <node id="24">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="25">
        <label>fstream</label>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="26">
        <label>limits</label>
      </node>
      <node id="27">
        <label>map</label>
      </node>
      <node id="28">
        <label>memory</label>
      </node>
      <node id="35">
        <label>mutex</label>
      </node>
      <node id="36">
        <label>optional</label>
      </node>
      <node id="29">
        <label>regex</label>
      </node>
      <node id="30">
        <label>sstream</label>
      </node>
      <node id="31">
        <label>stdexcept</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="19">
        <label>string_view</label>
      </node>
      <node id="9">
        <label>thread</label>
      </node>
      <node id="32">
        <label>tuple</label>
      </node>
      <node id="37">
        <label>typeindex</label>
      </node>
      <node id="13">
        <label>unordered_map</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/Server/include/Client.hpp</label>
        <link refid="Client_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Server/include/Server.hpp</label>
        <link refid="Server_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Server/src/Client.cpp</label>
        <link refid="Client_8cpp"/>
      </node>
      <node id="4">
        <label>src/Server/src/Server.cpp</label>
        <link refid="Server_8cpp"/>
      </node>
      <node id="5">
        <label>src/Server/src/check_message.cpp</label>
        <link refid="check__message_8cpp"/>
      </node>
      <node id="6">
        <label>src/Server/src/check_params.cpp</label>
        <link refid="check__params_8cpp"/>
      </node>
      <node id="7">
        <label>src/Server/src/robustness.cpp</label>
        <link refid="robustness_8cpp"/>
      </node>
      <node id="8">
        <label>src/Server/src/server_room.cpp</label>
        <link refid="server__room_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structserver__me__t" prot="public">server_me_t</innerclass>
    <innerclass refid="structparameter__t" prot="public">parameter_t</innerclass>
    <innerclass refid="structEndpointHash" prot="public">EndpointHash</innerclass>
    <innerclass refid="structEndpointEqual" prot="public">EndpointEqual</innerclass>
    <innerclass refid="classServer" prot="public">Server</innerclass>
    <innerclass refid="structServer_1_1ClientInfo" prot="private">Server::ClientInfo</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="Server_8hpp_1abc42251e23920034c0d3782eac8d3efe" prot="public" static="no">
        <type>struct <ref refid="structserver__me__t" kindref="compound">server_me_t</ref></type>
        <definition>typedef struct server_me_t server_t</definition>
        <argsstring></argsstring>
        <name>server_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="39" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="Server_8hpp_1a1da351ffe966b33215b7d936aeea3bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool recup_args</definition>
        <argsstring>(server_t *server, int ac, char **av)</argsstring>
        <name>recup_args</name>
        <param>
          <type><ref refid="Server_8hpp_1abc42251e23920034c0d3782eac8d3efe" kindref="member">server_t</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ac</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>av</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Server/include/Server.hpp" line="122" column="6" bodyfile="src/Server/src/check_params.cpp" bodystart="63" bodyend="74" declfile="src/Server/include/Server.hpp" declline="122" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2024</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>SERVER</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Server</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SERVER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/protocol.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ThreadPool_8hpp" kindref="compound">ThreadPool.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="room__system_8hpp" kindref="compound">room_system.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Server_2include_2Coin__system_8hpp" kindref="compound">Coin_system.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Server_2include_2Collision__system_8hpp" kindref="compound">Collision_system.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Server_2include_2Entity_8hpp" kindref="compound">Entity.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Server_2include_2Health__system_8hpp" kindref="compound">Health_system.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Server_2include_2Mouvement__system_8hpp" kindref="compound">Mouvement_system.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Server_2include_2Shoot__system_8hpp" kindref="compound">Shoot_system.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Server_2include_2Time__manager_8hpp" kindref="compound">Time_manager.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">boost::asio::ip::tcp;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">boost::asio::ip::udp;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structserver__me__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structserver__me__t" kindref="compound">server_me_t</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="structserver__me__t_1a9bf15886c333f54e131d64c455dfefdc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structserver__me__t_1a9bf15886c333f54e131d64c455dfefdc" kindref="member">tcp_port</ref>;</highlight></codeline>
<codeline lineno="38" refid="structserver__me__t_1a3452702048431418d85d6f6db60edcd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structserver__me__t_1a3452702048431418d85d6f6db60edcd5" kindref="member">udp_port</ref>;</highlight></codeline>
<codeline lineno="39" refid="Server_8hpp_1abc42251e23920034c0d3782eac8d3efe" refkind="member"><highlight class="normal">}<sp/><ref refid="Server_8hpp_1abc42251e23920034c0d3782eac8d3efe" kindref="member">server_t</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structparameter__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparameter__t" kindref="compound">parameter_t</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structparameter__t_1a9b89fe8e984071d2295ba583b931af29" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structparameter__t_1a9b89fe8e984071d2295ba583b931af29" kindref="member">argument</ref>;</highlight></codeline>
<codeline lineno="43" refid="structparameter__t_1a8c8edbf85b2138d9d408c97fc55312bd" refkind="member"><highlight class="normal"><sp/><sp/>std::function&lt;bool(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)&gt;<sp/><ref refid="structparameter__t_1a8c8edbf85b2138d9d408c97fc55312bd" kindref="member">add_new_param</ref>;</highlight></codeline>
<codeline lineno="44" refid="structparameter__t_1a3a2cd536628ceb3685a809493bc74abc" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structparameter__t_1a3a2cd536628ceb3685a809493bc74abc" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="45" refid="structparameter__t_1ad8d6c72f48ee9ad64ecaa4ff3f3d1163" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structparameter__t_1ad8d6c72f48ee9ad64ecaa4ff3f3d1163" kindref="member">usage</ref>;</highlight></codeline>
<codeline lineno="46" refid="structparameter__t_1ab07409ed6d3607fb5d3180cfb6849aea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structparameter__t_1ab07409ed6d3607fb5d3180cfb6849aea" kindref="member">check_me</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structEndpointHash" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structEndpointHash" kindref="compound">EndpointHash</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structEndpointHash_1a77d1118d890a1e8a8bfde33901d54217" refkind="member"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="structEndpointHash_1a77d1118d890a1e8a8bfde33901d54217" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::asio::ip::udp::endpoint<sp/>&amp;endpoint)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;std::string&gt;()(endpoint.address().to_string()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(endpoint.port()));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structEndpointEqual" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structEndpointEqual" kindref="compound">EndpointEqual</ref><sp/>{</highlight></codeline>
<codeline lineno="57" refid="structEndpointEqual_1abd989c9793c0a4f824cc4b6d32273412" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structEndpointEqual_1abd989c9793c0a4f824cc4b6d32273412" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::asio::ip::udp::endpoint<sp/>&amp;lhs,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::asio::ip::udp::endpoint<sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.address()<sp/>==<sp/>rhs.address()<sp/>&amp;&amp;<sp/>lhs.port()<sp/>==<sp/>rhs.port();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classServer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classServer" kindref="compound">Server</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classServer" kindref="compound">Server</ref>(boost::asio::io_context<sp/>&amp;io_context,<sp/><ref refid="structserver__me__t" kindref="compound">server_t</ref><sp/>server_me);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classServer_1a4b3aa2579cb1c8cd1d069582c14d0fa6" kindref="member">~Server</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1adb641bb1d2dd1c0ba6f93645b4107cb6" kindref="member">process_message</ref>(udp::socket<sp/>&amp;socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;buffer,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1a71163324a3460436e0df6905a141d682" kindref="member">process_message_contain</ref>(udp::socket<sp/>&amp;socket,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;buffer,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classServer_1a38608834a44a8280bf55ba56b791ba25" kindref="member">notify_clients_of_disconnection</ref>(boost::asio::io_context<sp/>&amp;io_context,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;disconnected_client);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1a6b97b25172b3c31b6cd0f83963ecbbbf" kindref="member">check_player_message</ref>(udp::socket<sp/>&amp;socket,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;buffer,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1ae8cbcb754a370d6f8fd64bb44f4af8bc" kindref="member">start_udp_server</ref>(boost::asio::io_context<sp/>&amp;io_context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1a1c1c4ff0f73d8afd484134756c5560bd" kindref="member">handle_tcp_connection</ref>(boost::asio::io_context<sp/>&amp;io_context,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcp::socket<sp/>socket);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1ad4e0f7acc9b9c21655e719f955ad1333" kindref="member">start_tcp_server</ref>(boost::asio::io_context<sp/>&amp;io_context,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1a5e56f156b78ab8d93383505a1a0cb503" kindref="member">start_heartbeat_monitor</ref>(boost::asio::io_context<sp/>&amp;io_context);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1adce871091b9a432a39996bb6d3c307d6" kindref="member">handle_client_ping</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1ad9bba72aa143da1b7f43bcb78d2fa4e5" kindref="member">send_udp_with_ack</ref>(udp::socket<sp/>&amp;socket,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;message,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1a0582d12fd37cda12d06db35ece424521" kindref="member">handle_room_creation</ref>(udp::socket<sp/>&amp;socket,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;room_name,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1ad870bdbd51745c26f476d64dac7dbdf6" kindref="member">handle_room_joining</ref>(udp::socket<sp/>&amp;socket,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>room_id,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1aa8edb9097c9c30cc31450e9837f06523" kindref="member">handle_list_rooms</ref>(udp::socket<sp/>&amp;socket,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="classServer_1a5cd60e8f153c791812d9b497a86116fa" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::pair&lt;udp::endpoint,<sp/>std::string&gt;&gt;<sp/><ref refid="classServer_1a5cd60e8f153c791812d9b497a86116fa" kindref="member">id_name</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1a1318e4e82a5075f39f1a7d146978f92e" kindref="member">run_game</ref>();</highlight></codeline>
<codeline lineno="97" refid="classServer_1afffd36a76004131cc81372f8cb7a36e0" refkind="member"><highlight class="normal"><sp/><sp/>boost::asio::steady_timer<sp/><ref refid="classServer_1afffd36a76004131cc81372f8cb7a36e0" kindref="member">_game_time_manager</ref>;</highlight></codeline>
<codeline lineno="98" refid="classServer_1a37bf1bdfe9f658722d2e6986aee87455" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRegistry" kindref="compound">Registry</ref><sp/><ref refid="classServer_1a37bf1bdfe9f658722d2e6986aee87455" kindref="member">registry</ref>;</highlight></codeline>
<codeline lineno="99" refid="classServer_1a7cf9c7008b64401b78ea15e72afabfc3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classMouvementSystem" kindref="compound">MouvementSystem</ref><sp/><ref refid="classServer_1a7cf9c7008b64401b78ea15e72afabfc3" kindref="member">movement</ref>;</highlight></codeline>
<codeline lineno="100" refid="classServer_1a7b2e00c389aa96a2022ec6ed8a06448c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classTimeManager" kindref="compound">TimeManager</ref><sp/><ref refid="classServer_1a7b2e00c389aa96a2022ec6ed8a06448c" kindref="member">enemyTimer</ref>;</highlight></codeline>
<codeline lineno="101" refid="classServer_1ae6d40b8cbc195aeb3b3c4736f9c9f115" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classCollisionSystem" kindref="compound">CollisionSystem</ref><sp/><ref refid="classServer_1ae6d40b8cbc195aeb3b3c4736f9c9f115" kindref="member">collision</ref>;</highlight></codeline>
<codeline lineno="102" refid="classServer_1a493e2f6cdc1ac7b34c7ba08e996af10d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classServer_1a493e2f6cdc1ac7b34c7ba08e996af10d" kindref="member">game_run</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103" refid="classServer_1a8215c317c9ccea1af12bffe1d3a4e7c5" refkind="member"><highlight class="normal"><sp/><sp/>u_int16_t<sp/><ref refid="classServer_1a8215c317c9ccea1af12bffe1d3a4e7c5" kindref="member">players_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104" refid="classServer_1a379f70d7a47b7a1777ac3085962acb2f" refkind="member"><highlight class="normal"><sp/><sp/>u_int16_t<sp/><ref refid="classServer_1a379f70d7a47b7a1777ac3085962acb2f" kindref="member">enemy_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105" refid="classServer_1a11ff54c2dafcf3447428be775b215b3c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;udp::endpoint&gt;<sp/><ref refid="classServer_1a11ff54c2dafcf3447428be775b215b3c" kindref="member">_connected_clients</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classServer_1a81a0f407dfec7384d18ce56add98fce2" kindref="member">get_player_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServer_1a8b23573e108de83f85118223b2245b6e" kindref="member">check_player_position</ref>(udp::socket<sp/>&amp;socket,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;buffer,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>udp::endpoint<sp/>&amp;client_endpoint);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ClientInfo<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::steady_clock::time_point<sp/>last_ping;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;udp::endpoint,<sp/>ClientInfo,<sp/>EndpointHash,<sp/>EndpointEqual&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clients_me;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;udp::endpoint,<sp/>std::string,<sp/>EndpointHash,<sp/>EndpointEqual&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clients;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classRoom__System" kindref="compound">Room_System</ref><sp/>room_system;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="Server_8hpp_1a1da351ffe966b33215b7d936aeea3bb0" kindref="member">recup_args</ref>(<ref refid="structserver__me__t" kindref="compound">server_t</ref><sp/>*server,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ac,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**av);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!SERVER_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/Server/include/Server.hpp"/>
  </compounddef>
</doxygen>
